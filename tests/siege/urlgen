#!/bin/sh -e

# Calculate start time as unix timestamp.

PLATFORM=`uname`

_date_to_unix_timestamp () {
    if [  "$PLATFORM" = "Darwin" ] ; then
        date -j -f "%b %d %T %Z %Y" "$1" "+%s"
    elif [  "$PLATFORM" = "Linux" ] ; then
        date -d "$1" "+%s"
    else
        echo "I don't know if your date can read a format and a time, failing"
        exit 99
    fi
}

_timestamp_to_time_string () {
    if [  "$PLATFORM" = "Darwin" ] ; then
        date -j -f "%s" "$1" +"%Y-%m-%dT%H:%M:%SZ"
    elif [  "$PLATFORM" = "Linux" ] ; then
        date -d "@$1" +"%Y-%m-%dT%H:%M:%SZ"
    fi
}

# Starting the test at "Jan 01 00:00:00 EDT 2000"
TIME=`_date_to_unix_timestamp "Jan 01 00:00:00 EDT 2000"`


# Set defaults.
INTERVAL=1      # 1s
NUMSERIES=1
NUMPOINTS=100

# Parse arguments
while getopts "s:p:i:h" opt; do
	case $opt in
	i)
		INTERVAL=$OPTARG
		;;
	s)
		NUMSERIES=$OPTARG
		;;
	p)
		NUMPOINTS=$OPTARG
		;;
	h)
		echo "urlgen is a utility for generating URL files for siege."
		echo ""
		echo "Usage:"
		echo "	urlgen.sh [OPTIONS]"
		echo ""
		echo "The following arguments can be specified:"
		echo ""
		echo "	-i seconds"
	    echo "	    Interval between generated points per series."
	    echo "	    Defaults to 1 second."
		echo ""
		echo "	-s num"
	    echo "	    Number of unique series to generate."
	    echo "	    Defaults to 1 series."
		echo ""
		echo "	-p num"
	    echo "	    Number of points per series to generate."
	    echo "	    Defaults to 100 points."
		echo ""
		exit 1
		;;
	esac
done

# Generate a new value every interval per series.
for i in `seq 1 $NUMPOINTS`;
do
	# Move forward the current time.
	TIME=$((TIME+INTERVAL))
	TIMESTAMP=`_timestamp_to_time_string $TIME`

	# Generate a URL for each series.
	for series in `seq 1 $NUMSERIES`;
	do
		echo 'http://localhost:8086/write POST {"database" : "db", "retentionPolicy" : "raw", "points": [{"name": "cpu", "tags": {"host": "server'$series'"}, "timestamp": "'$TIMESTAMP'","values": {"value": 100}}]}'
	done
done
