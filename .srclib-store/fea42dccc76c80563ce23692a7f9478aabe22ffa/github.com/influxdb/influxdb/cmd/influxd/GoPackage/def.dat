Â
*.mainpackage"cmd/influxd8Rª{
        "Exported": true,
        "PkgName": "main",
        "TypeString": "",
        "Kind": "package",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä.Û
*main.go/MainMaintype"cmd/influxd/main.go(†0˙8RÚ{
        "Exported": true,
        "PkgScope": true,
        "PkgName": "main",
        "TypeString": "github.com/influxdb/influxdb/cmd/influxd.Main",
        "UnderlyingTypeString": "struct{Logger *log.Logger; Stdin io.Reader; Stdout io.Writer; Stderr io.Writer}",
        "Kind": "type",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }Z5

text/plain'Main represents the program execution.
ä./main/Mainâ
*main.go/Main/LoggerLoggerfield"cmd/influxd/main.go(Ø0¡8RÆ{
        "Exported": true,
        "PkgScope": true,
        "PkgName": "main",
        "FieldOfStruct": "Main",
        "TypeString": "*log.Logger",
        "UnderlyingTypeString": "*log.Logger",
        "Kind": "field",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/Main/LoggerÈ
*main.go/Main/RunRunfunc"cmd/influxd/main.go(â	0ë8R…{
        "Exported": true,
        "PkgScope": true,
        "PkgName": "main",
        "Receiver": "*Main",
        "TypeString": "func(args ...string) error",
        "UnderlyingTypeString": "func(args ...string) error",
        "Kind": "method",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ZM

text/plain?Run determines and runs the command specified by the CLI args.
ä./main/Main/Run·
+*)main.go/Main/Run/$main0/$main0/$main0/errerrvar"cmd/influxd/main.go(§0ª@Rﬂ{
        "PkgName": "main",
        "TypeString": "error",
        "UnderlyingTypeString": "interface{Error() string}",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä(./main/Main/Run/$main0/$main0/$main0/errü
$*"main.go/Main/Run/$main0/$main0/cmdcmdvar"cmd/influxd/main.go(ô
0∞
@R´{
        "PkgName": "main",
        "TypeString": "*github.com/influxdb/influxdb/cmd/influxd/run.Command",
        "UnderlyingTypeString": "*github.com/influxdb/influxdb/cmd/influxd/run.Command",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä!./main/Main/Run/$main0/$main0/cmd‡
)*'main.go/Main/Run/$main0/$main0/signalChsignalChvar"cmd/influxd/main.go(ˆ0ô@R›{
        "PkgName": "main",
        "TypeString": "chan os.Signal",
        "UnderlyingTypeString": "chan os.Signal",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä&./main/Main/Run/$main0/$main0/signalCh·
+*)main.go/Main/Run/$main0/$main1/$main0/errerrvar"cmd/influxd/main.go(‘0Ï@Rﬂ{
        "PkgName": "main",
        "TypeString": "error",
        "UnderlyingTypeString": "interface{Error() string}",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä(./main/Main/Run/$main0/$main1/$main0/err®
%*#main.go/Main/Run/$main0/$main1/namenamevar"cmd/influxd/main.go(≥0Œ@R±{
        "PkgName": "main",
        "TypeString": "*github.com/influxdb/influxdb/cmd/influxd/backup.Command",
        "UnderlyingTypeString": "*github.com/influxdb/influxdb/cmd/influxd/backup.Command",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä"./main/Main/Run/$main0/$main1/name·
+*)main.go/Main/Run/$main0/$main2/$main0/errerrvar"cmd/influxd/main.go(‹0Ù@Rﬂ{
        "PkgName": "main",
        "TypeString": "error",
        "UnderlyingTypeString": "interface{Error() string}",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä(./main/Main/Run/$main0/$main2/$main0/err™
%*#main.go/Main/Run/$main0/$main2/namenamevar"cmd/influxd/main.go(∫0÷@R≥{
        "PkgName": "main",
        "TypeString": "*github.com/influxdb/influxdb/cmd/influxd/restore.Command",
        "UnderlyingTypeString": "*github.com/influxdb/influxdb/cmd/influxd/restore.Command",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä"./main/Main/Run/$main0/$main2/name·
+*)main.go/Main/Run/$main0/$main3/$main0/errerrvar"cmd/influxd/main.go(≈0Ù@Rﬂ{
        "PkgName": "main",
        "TypeString": "error",
        "UnderlyingTypeString": "interface{Error() string}",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä(./main/Main/Run/$main0/$main3/$main0/err·
+*)main.go/Main/Run/$main0/$main4/$main0/errerrvar"cmd/influxd/main.go(≈0Ï@Rﬂ{
        "PkgName": "main",
        "TypeString": "error",
        "UnderlyingTypeString": "interface{Error() string}",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä(./main/Main/Run/$main0/$main4/$main0/err·
+*)main.go/Main/Run/$main0/$main5/$main0/errerrvar"cmd/influxd/main.go(ª0‡@Rﬂ{
        "PkgName": "main",
        "TypeString": "error",
        "UnderlyingTypeString": "interface{Error() string}",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä(./main/Main/Run/$main0/$main5/$main0/err¨
*main.go/Main/Run/argsargsvar"cmd/influxd/main.go(ú	0™	@R—{
        "PkgName": "main",
        "TypeString": "[]string",
        "UnderlyingTypeString": "[]string",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/Main/Run/argsÔ
*main.go/Main/Run/mmvar"cmd/influxd/main.go(è	0ñ	@Rù{
        "PkgName": "main",
        "TypeString": "*github.com/influxdb/influxdb/cmd/influxd.Main",
        "UnderlyingTypeString": "*github.com/influxdb/influxdb/cmd/influxd.Main",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/Main/Run/m®
*main.go/Main/Run/namenamevar"cmd/influxd/main.go(µ	0Ÿ	@RÕ{
        "PkgName": "main",
        "TypeString": "string",
        "UnderlyingTypeString": "string",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/Main/Run/name©
*main.go/Main/StderrStderrfield"cmd/influxd/main.go(Ë0¯8RŒ{
        "Exported": true,
        "PkgScope": true,
        "PkgName": "main",
        "FieldOfStruct": "Main",
        "TypeString": "io.Writer",
        "UnderlyingTypeString": "interface{Write(p []byte) (n int, err error)}",
        "Kind": "field",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/Main/Stderr•
*main.go/Main/StdinStdinfield"cmd/influxd/main.go(ƒ0‘8RÕ{
        "Exported": true,
        "PkgScope": true,
        "PkgName": "main",
        "FieldOfStruct": "Main",
        "TypeString": "io.Reader",
        "UnderlyingTypeString": "interface{Read(p []byte) (n int, err error)}",
        "Kind": "field",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/Main/Stdin©
*main.go/Main/StdoutStdoutfield"cmd/influxd/main.go(÷0Ê8RŒ{
        "Exported": true,
        "PkgScope": true,
        "PkgName": "main",
        "FieldOfStruct": "Main",
        "TypeString": "io.Writer",
        "UnderlyingTypeString": "interface{Write(p []byte) (n int, err error)}",
        "Kind": "field",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/Main/StdoutÍ
*main.go/NewMainNewMainfunc"cmd/influxd/main.go(¶0≈8R‡{
        "Exported": true,
        "PkgScope": true,
        "PkgName": "main",
        "TypeString": "func() *github.com/influxdb/influxdb/cmd/influxd.Main",
        "UnderlyingTypeString": "func() *github.com/influxdb/influxdb/cmd/influxd.Main",
        "Kind": "func",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }Z5

text/plain'NewMain return a new instance of Main.
ä./main/NewMain∞
*main.go/NewVersionCommandNewVersionCommandfunc"cmd/influxd/main.go(à0˙8RÙ{
        "Exported": true,
        "PkgScope": true,
        "PkgName": "main",
        "TypeString": "func() *github.com/influxdb/influxdb/cmd/influxd.VersionCommand",
        "UnderlyingTypeString": "func() *github.com/influxdb/influxdb/cmd/influxd.VersionCommand",
        "Kind": "func",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ZI

text/plain;NewVersionCommand return a new instance of VersionCommand.
ä./main/NewVersionCommandà
*main.go/ParseCommandNameParseCommandNamefunc"cmd/influxd/main.go(ﬁ0√8R¬{
        "Exported": true,
        "PkgScope": true,
        "PkgName": "main",
        "TypeString": "func(args []string) (string, []string)",
        "UnderlyingTypeString": "func(args []string) (string, []string)",
        "Kind": "func",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ZV

text/plainHParseCommandName extracts the command name and args from the args list.
ä./main/ParseCommandNameº
*main.go/ParseCommandName/argsargsvar"cmd/influxd/main.go(Ù0Å@R—{
        "PkgName": "main",
        "TypeString": "[]string",
        "UnderlyingTypeString": "[]string",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/ParseCommandName/argsÒ
*main.go/ParseCommandName/namenamevar"cmd/influxd/main.go( 0’@RÕ{
        "PkgName": "main",
        "TypeString": "string",
        "UnderlyingTypeString": "string",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }Z7

text/plain)Retrieve command name as first argument.
ä./main/ParseCommandName/nameç
*main.go/VersionCommandVersionCommandtype"cmd/influxd/main.go(ã0»8R◊{
        "Exported": true,
        "PkgScope": true,
        "PkgName": "main",
        "TypeString": "github.com/influxdb/influxdb/cmd/influxd.VersionCommand",
        "UnderlyingTypeString": "struct{Stdout io.Writer; Stderr io.Writer}",
        "Kind": "type",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ZL

text/plain>Command represents the command executed by "influxd version".
ä./main/VersionCommand¯
*main.go/VersionCommand/RunRunfunc"cmd/influxd/main.go(Ø 0¡#8R”{
        "Exported": true,
        "PkgScope": true,
        "PkgName": "main",
        "Receiver": "*VersionCommand",
        "TypeString": "func(args ...string) error",
        "UnderlyingTypeString": "func(args ...string) error",
        "Kind": "method",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }Z>

text/plain0Run prints the current version and commit info.
ä./main/VersionCommand/RunŸ
'*%main.go/VersionCommand/Run/$main1/errerrvar"cmd/influxd/main.go(ï"0™"@Rﬂ{
        "PkgName": "main",
        "TypeString": "error",
        "UnderlyingTypeString": "interface{Error() string}",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä$./main/VersionCommand/Run/$main1/err¿
!*main.go/VersionCommand/Run/argsargsvar"cmd/influxd/main.go(Œ 0‹ @R—{
        "PkgName": "main",
        "TypeString": "[]string",
        "UnderlyingTypeString": "[]string",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/VersionCommand/Run/argsù
 *main.go/VersionCommand/Run/cmdcmdvar"cmd/influxd/main.go(µ 0» @R±{
        "PkgName": "main",
        "TypeString": "*github.com/influxdb/influxdb/cmd/influxd.VersionCommand",
        "UnderlyingTypeString": "*github.com/influxdb/influxdb/cmd/influxd.VersionCommand",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/VersionCommand/Run/cmdƒ
*main.go/VersionCommand/Run/fsfsvar"cmd/influxd/main.go(ê!0ø!@R€{
        "PkgName": "main",
        "TypeString": "*flag.FlagSet",
        "UnderlyingTypeString": "*flag.FlagSet",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/VersionCommand/Run/fs«
*main.go/VersionCommand/StderrStderrfield"cmd/influxd/main.go(∂0∆8Rÿ{
        "Exported": true,
        "PkgScope": true,
        "PkgName": "main",
        "FieldOfStruct": "VersionCommand",
        "TypeString": "io.Writer",
        "UnderlyingTypeString": "interface{Write(p []byte) (n int, err error)}",
        "Kind": "field",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/VersionCommand/Stderr«
*main.go/VersionCommand/StdoutStdoutfield"cmd/influxd/main.go(§0¥8Rÿ{
        "Exported": true,
        "PkgScope": true,
        "PkgName": "main",
        "FieldOfStruct": "VersionCommand",
        "TypeString": "io.Writer",
        "UnderlyingTypeString": "interface{Write(p []byte) (n int, err error)}",
        "Kind": "field",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/VersionCommand/Stdoutı
*main.go/branchbranchvar"cmd/influxd/main.go(†0ÆRÁ{
        "PkgScope": true,
        "PkgName": "main",
        "TypeString": "string",
        "UnderlyingTypeString": "string",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }Z?

text/plain1These variables are populated via the Go linker.
ä./main/branchı
*main.go/commitcommitvar"cmd/influxd/main.go(ê0ûRÁ{
        "PkgScope": true,
        "PkgName": "main",
        "TypeString": "string",
        "UnderlyingTypeString": "string",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }Z?

text/plain1These variables are populated via the Go linker.
ä./main/commit®
*main.go/init$main439initfunc"cmd/influxd/main.go(≤0Õ@RŒ{
        "PkgName": "main",
        "TypeString": "func()",
        "UnderlyingTypeString": "func()",
        "Kind": "func",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/init$main439∞
*main.go/mainmainfunc"cmd/influxd/main.go(œ0ÔRË{
        "PkgScope": true,
        "PkgName": "main",
        "TypeString": "func()",
        "UnderlyingTypeString": "func()",
        "Kind": "func",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/mainΩ
*main.go/main/$main0/errerrvar"cmd/influxd/main.go(î0∞@Rﬂ{
        "PkgName": "main",
        "TypeString": "error",
        "UnderlyingTypeString": "interface{Error() string}",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/main/$main0/errÁ
*main.go/main/mmvar"cmd/influxd/main.go(Å0è@Rù{
        "PkgName": "main",
        "TypeString": "*github.com/influxdb/influxdb/cmd/influxd.Main",
        "UnderlyingTypeString": "*github.com/influxdb/influxdb/cmd/influxd.Main",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/main/m¯
*main.go/versionversionvar"cmd/influxd/main.go(¯0éRÁ{
        "PkgScope": true,
        "PkgName": "main",
        "TypeString": "string",
        "UnderlyingTypeString": "string",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }Z?

text/plain1These variables are populated via the Go linker.
ä./main/version∆
*main.go/versionUsageversionUsagevar"cmd/influxd/main.go(«#0≤$RÁ{
        "PkgScope": true,
        "PkgName": "main",
        "TypeString": "string",
        "UnderlyingTypeString": "string",
        "Kind": "var",
        "PackageImportPath": "github.com/influxdb/influxdb/cmd/influxd"
      }ä./main/versionUsage