version: 2.1

executors:
  linux-amd64:
    machine:
      image: ubuntu-2004:202104-01
    resource_class: large

  linux-arm64:
    machine:
      image: ubuntu-2004:202104-01
    resource_class: arm.large

  mac:
    macos:
      xcode: 12.4.0
    resource_class: medium
    shell: /bin/bash -eo pipefail

  windows:
    machine:
      image: windows-server-2019-vs2019:stable
    resource_class: windows.medium
    shell: bash.exe -eo pipefail

workflows:
  version: 2
  build-and-test:
    jobs:
      - build:
          matrix:
            parameters:
              executor:
                - linux-amd64
                - linux-arm64
                - mac
                - windows
      - test:
          matrix:
            parameters:
              executor:
                - linux-amd64
                - linux-arm64
                - mac
                - windows

commands:
  setup:
    steps:
      - run:
          name: Install system dependencies
          command: ./scripts/ci/setup-system.sh
      - run:
          name: Install Go
          command: |
            ./scripts/ci/install-go.sh ${HOME}/.tools
            echo 'export PATH=${HOME}/.tools/go/bin:${PATH}' >> $BASH_ENV
      - run:
          name: Set GOPATH and GOCACHE
          command: |
            GOPATH=${HOME}/go
            echo "export GOPATH=${GOPATH}" >> $BASH_ENV
            mkdir -p ${GOPATH}/bin
            echo 'export PATH=${GOPATH}/bin:${PATH}' >> $BASH_ENV
            mkdir -p ${HOME}/.cache
            echo 'export GOCACHE=${HOME}/.cache' >> $BASH_ENV
      - run:
          name: Install Rust toolchain
          command: |
            ./scripts/ci/install-rust.sh
            echo 'export PATH=${HOME}/.cargo/bin:${PATH}' >> $BASH_ENV

jobs:
  build:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor >>
    steps:
      - checkout
      - setup
      - run:
          name: Install pkg-config wrapper
          command: go build -o "${GOPATH}/bin/" github.com/influxdata/pkg-config
      - run:
          name: Generate assets
          command: make generate
      - run:
          name: Build release binary
          command: |
            DEST=dist/influxd_$(go env GOOS)_$(go env GOARCH)
            mkdir -p "$DEST"
            ./scripts/ci/build-influxd.sh "$DEST"
      - store_artifacts:
          path: dist
      - persist_to_workspace:
          root: .
          paths:
            - dist

  test:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor >>
    parallelism: 8
    steps:
      - checkout
      - setup
      - run:
          name: Download gotestsum
          command: |
            GOTESTSUM_VERSION=1.6.4
            GOTESTSUM_ARCHIVE=gotestsum_${GOTESTSUM_VERSION}_$(go env GOOS)_$(go env GOARCH).tar.gz
            GOTESTSUM_URL=https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/${GOTESTSUM_ARCHIVE}

            wget ${GOTESTSUM_URL}
            tar xzf ${GOTESTSUM_ARCHIVE}
            install gotestsum ${GOPATH}/bin/
      - run:
          name: Run race tests
          command: |
            mkdir -p /tmp/test-results
            GO_TEST_CMD="gotestsum --format standard-quiet --junitfile /tmp/test-results/gotestsum.xml -- -p=4"
            TESTFILES=($(go list ./... | circleci tests split --split-by=timings))
            make GO_TEST_CMD="$GO_TEST_CMD" GO_TEST_PATHS="${TESTFILES[*]}" test-go-race
      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results:
          path: /tmp/test-results
