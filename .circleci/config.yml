version: 2.1

executors:
  linux-amd64:
    machine:
      image: ubuntu-2004:202104-01
    resource_class: large
    working_directory: /home/circleci/go/src/github.com/influxdata/influxdb
    environment:
      RUST_TARGET: x86_64-unknown-linux-musl

  linux-arm64:
    machine:
      image: ubuntu-2004:202104-01
    resource_class: arm.large
    working_directory: /home/circleci/go/src/github.com/influxdata/influxdb
    environment:
      RUST_TARGET: aarch64-unknown-linux-musl

workflows:
  version: 2
  build:
    jobs:
      - build:
          matrix:
            parameters:
              executor: [linux-amd64, linux-arm64]

jobs:
  build:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor >>
    steps:
      - checkout
      - run:
          name: Set GOPATH
          command: |
            echo 'export GOPATH=/home/circleci/go' >> $BASH_ENV
            echo 'export PATH=${GOPATH}/bin:${PATH}' >> $BASH_ENV
      - run:
          name: Install system dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y --no-install-recommends \
              bzr \
              clang \
              libprotobuf-dev \
              pkg-config \
              protobuf-compiler
      - run:
          name: Install Rust toolchain
          command: |
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -t ${RUST_TARGET} -y
            echo 'export PATH=${HOME}/.cargo/bin:${PATH}' >> $BASH_ENV
      - run:
          name: Install goreleaser
          environment:
            - GORELEASER_VERSION: 0.164.0
          command: |
            curl -sfL -o goreleaser-install https://install.goreleaser.com/github.com/goreleaser/goreleaser.sh
            sh goreleaser-install -b ${GOPATH}/bin v${GORELEASER_VERSION}
            rm goreleaser-install
      - run:
          name: Install pkg-config wrapper
          command: make pkg-config
      - run:
          name: Build static binary
          command: goreleaser build --snapshot --single-target
      - store_artifacts:
          path: dist
